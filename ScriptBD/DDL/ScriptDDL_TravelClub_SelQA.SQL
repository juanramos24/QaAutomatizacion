--   -------------------------------------------------- 
--   Generated by Enterprise Architect Version 7.5.850
--   Created On : viernes, 01 septiembre, 2017 
--   DBMS       : MySql 
--   -------------------------------------------------- 


SET FOREIGN_KEY_CHECKS=0;


--  Drop Tables, Stored Procedures and Views 
DROP TABLE IF EXISTS Caso_Prueba
;
DROP TABLE IF EXISTS Login_Posible
;
DROP TABLE IF EXISTS Login_Viaje
;
DROP TABLE IF EXISTS Pasajero_Posible
;
DROP TABLE IF EXISTS Pasajero_Viaje
;
DROP TABLE IF EXISTS Periodo_Viaje_Posible
;
DROP TABLE IF EXISTS Regla_Comercial
;
DROP TABLE IF EXISTS Resultado_CP
;
DROP TABLE IF EXISTS Tarjeta_Posible
;
DROP TABLE IF EXISTS Tarjeta_Viaje
;
DROP TABLE IF EXISTS Viaje_Prueba_Flujo
;

--  Create Tables 
CREATE TABLE Caso_Prueba
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica a cada caso de prueba',
	Categoria VARCHAR(25) COMMENT 'Campo que identifica la categoria del casos de prueba (Promoción, Busqueda, Datos Pasajeros, Login, Pago)',
	Clasificacion VARCHAR(25) COMMENT 'Campo que identifica la clasificación del caso de prueba (Funcional o Validación)',
	Resultado_Esperado VARCHAR(255) COMMENT 'Campo que contiene descripción del resultado esperado por el caso de prueba',
	Tipo_Resultado BIT COMMENT 'Campo que identifica si el caso de prueba valida algo positivo o negativo',
	PRIMARY KEY (Id)
)  COMMENT='Tabla que contiene la información de cada uno de los casos de pruebas'
;


CREATE TABLE Login_Posible
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica a cada login posible',
	Rut VARCHAR(10) COMMENT 'Campo que contiene el rut del usuario asociado al login posible',
	Password VARCHAR(15) COMMENT 'Campo que contiene la contraseña asociado al usuario del login posible',
	Dato_OK BIT COMMENT 'Campo que identifica si la infortmación del login es verdadera o falsa',
	PRIMARY KEY (Id)
)  COMMENT='Tabla que contiene la información de los logins posibles de usar el en viaje de prueba'
;


CREATE TABLE Login_Viaje
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica a cada registro de login usado para la prueba del viaje',
	Tipo_Resultado VARCHAR(20) COMMENT 'Campo que identifica si el login corresponde a un login exitoso o fallido',
	Id_Login_Posible INTEGER COMMENT 'Campo que contiene el login posible usado para el viaje de prueba',
	Id_Viaje_Prueba INTEGER COMMENT 'Campo que contiene el viaje de prueba al cual esta asociado el login',
	PRIMARY KEY (Id),
	KEY (Id_Login_Posible),
	KEY (Id_Viaje_Prueba)
)  COMMENT='Tabla que contiene la información del login asociado al viaje de prueba'
;


CREATE TABLE Pasajero_Posible
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica a cada pasajero posible',
	Sexo VARCHAR(20) COMMENT 'Campo que contiene el sexo asociado al pasajero posible',
	PrimerNombre VARCHAR(50) COMMENT 'Campo que contiene el primer nombre del pasajero posible',
	SegundoNombre VARCHAR(50) COMMENT 'Campo que contiene el segundo nombre del pasajero posible',
	PrimerApellido VARCHAR(50) COMMENT 'Campo que contiene el primer apellido del pasajero posible',
	SegundoApellido VARCHAR(50) COMMENT 'Campo que contiene el segundo apellido del pasajero posible',
	Rut VARCHAR(10) COMMENT 'Campo que contiene el rut del pasajero posible',
	Passenger_Type VARCHAR(5) COMMENT 'Campo que contiene el tipo de pasajero posible (ADT,CHD,INF)',
	TipoDoc VARCHAR(15) COMMENT 'Campo que contiene el tipo de documento asociado al pasajero posible (RUT o PASAPORTE)',
	NumDoc VARCHAR(15) COMMENT 'Campo que contiene el numero de documento asociado al pasajero posible (RUT o PASAPORTE)',
	FchNacimiiento DATE COMMENT 'Campo que contiene la fecha de nacimiento asociada al pasajero posible',
	Nacionalidad VARCHAR(35) COMMENT 'Campo que contiene la nacionalidad asociada al pasajero posible',
	FchVencimiento DATE COMMENT 'Campo que contiene la fecha de vencimiento del documento asociada al pasajero posible',
	NacEmisionDoc VARCHAR(35) COMMENT 'Campo que contiene la nacionalidad del documento asociada al pasajero posible',
	Email VARCHAR(50) COMMENT 'Campo que contiene el correo asociado al pasajero posible',
	Telefono VARCHAR(15) COMMENT 'Campo que contiene el telefono asociado al pasajero posible',
	PRIMARY KEY (Id)
)  COMMENT='Tabla que contiene la información de los pasajeros posibles de usar el en viaje de prueba'
;


CREATE TABLE Pasajero_Viaje
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica a cada pasajero usado en el viaje de prueba',
	Passenger_Type VARCHAR(5) COMMENT 'Campo que identifica el tipo de pasajero usado para el viaje de prueba',
	Id_Viaje_Prueba INTEGER COMMENT 'Campo que contiene la asociación del pasajero con el viaje de prueba',
	Id_Pasajero_Posible INTEGER COMMENT 'Campo que contiene la asociación del pasajero posible usado en el viaje de prueba',
	PRIMARY KEY (Id),
	KEY (Id_Viaje_Prueba),
	KEY (Id_Pasajero_Posible)
)  COMMENT='Tabla que contiene la información del o los pasajero asociados al viaje de prueba'
;


CREATE TABLE Periodo_Viaje_Posible
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica a cada periodo viaje posible',
	Travel_Date_From DATE COMMENT 'Campo que contiene la fecha desde para el periodo posible',
	Travel_Date_To DATE COMMENT 'Campo que contiene la fecha hasta para el periodo posible',
	PRIMARY KEY (Id)
)  COMMENT='Tabla que contiene la información de tres fechas de viaje posibles para cada una de las reglas comerciales.  Estas se obtiene en forma aleatoria y cumpliendo con la regla comercial.'
;


CREATE TABLE Regla_Comercial
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica cada regla comercial',
	Cdg_Identifier VARCHAR(100) COMMENT 'Campo que contiene la identificado de la regla comercial',
	Destination_Black_List VARCHAR(255) COMMENT 'Campo que contiene la lista de destinos bloqueados por la regla (cada destino esta separado por ";")',
	Cabin_Type_Black_List VARCHAR(255) COMMENT 'Campo que contiene la lista de cabinas bloqueados por la regla (cada cabita esta separado por ";")',
	Booking_Class_Black_List VARCHAR(255) COMMENT 'Campo que contiene la lista de clases bloqueados por la regla (cada clase esta separado por ";")',
	Buying_Date_From DATE COMMENT 'Campo que contiene la fecha de compra desde asociado a la regla comercial',
	Buying_Date_To DATE COMMENT 'Campo que contiene la fecha de compra hasta asociado a la regla comercial',
	Blackout_Travel_From DATE COMMENT 'Campo que contiene la fecha de blackout desde asociado a la regla comercial',
	Blackout_Travel_To DATE COMMENT 'Campo que contiene la fecha de blackout hasta asociado a la regla comercial.',
	Status VARCHAR(25) COMMENT 'Campo que contiene el estado de vigencia de la regla comercial',
	PRIMARY KEY (Id)
)  COMMENT='Tabla que contiene la información asociada a cada una de las reglas comerciales obtenidas desde la Colección OVER (MongoDB)'
;


CREATE TABLE Resultado_CP
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica a cada resultado ejecución del caso de prueba',
	Id_Viaje_Prueba_Flujo INTEGER COMMENT 'Campo que identifica el viaje de prueba usado en el resultado del caso de prueba',
	Id_Caso_Prueba INTEGER COMMENT 'Campo que identifica el caso de prueba asociado al resultado ejecutado',
	Resultado_Obtenido VARCHAR(255) COMMENT 'Campo de contiene la descripción del resultado obtenido en la ejecución del caso de prueba',
	Estado VARCHAR(30) COMMENT 'Campo que identifica el estado de la ejecución del caso de prueba',
	Imagen_Evidencia VARCHAR(50) COMMENT 'Campo que contiene la ruta del archivo con la imagen de evidencia.',
	FchEjecucion DATETIME COMMENT 'Campo que contiene la fecha y hora en la cual se ejecuto el caso de prueba.',
	Nombre_Ciclo VARCHAR(25) COMMENT 'Campo que permite identificar el ciclo al cual esta asociado el resultado del caso de prueba',
	PRIMARY KEY (Id),
	KEY (Id_Caso_Prueba),
	KEY (Id_Viaje_Prueba_Flujo)
)  COMMENT='Tabla que contiene la información de cada resultado de ejecución de los casos de prueba'
;


CREATE TABLE Tarjeta_Posible
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica a cada tarjeta posible',
	Bines VARCHAR(50) COMMENT 'Campo que contiene el codigo Bin de la tarjeta posible',
	Cant_DP VARCHAR(3) COMMENT 'Campo que contiene la cantidad DP de la tarjeta posible',
	Mes_Expiracion VARCHAR(2) COMMENT 'Campo que contiene el mes de expiración de la tarjeta posible',
	Anio_Expiracion VARCHAR(4) COMMENT 'Campo que contiene el año de expiración de la tarjeta ',
	Cdg_Seguridad VARCHAR(3) COMMENT 'Campo que contiene el código de seguridad de la tarjeta ',
	Num_Cuotas VARCHAR(25) COMMENT 'Campo que contiene el numero de cuotas usadas en el pago con tarjeta',
	Dato_OK BIT COMMENT 'Campo que identifica si la información de la tarjeta es verdadera o falsa',
	PRIMARY KEY (Id)
)  COMMENT='Tabla que contiene la información asociada a las tarjetas posibles de usar en el viaje de prueba'
;


CREATE TABLE Tarjeta_Viaje
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica a cada tarjeta de prueba para el viaje',
	Tipo_Resultado VARCHAR(20) COMMENT 'Campo que identifica si los datos de la tarjeta son usados para un resultado existoso o fallido',
	Id_Tarjeta_Posible INTEGER COMMENT 'Campo que contiene la tarjeta posible usada en el viaje de prueba',
	Id_Viaje_Prueba INTEGER COMMENT 'Campo que identifica el viaje de prueba al cual esta asociado la tarjeta',
	PRIMARY KEY (Id),
	KEY (Id_Tarjeta_Posible),
	KEY (Id_Viaje_Prueba)
)  COMMENT='Tabla que contiene la información de la tarjeta asociada al viaje de prueba'
;


CREATE TABLE Viaje_Prueba_Flujo
(
	Id INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Campo numerico correlativo  que identifica en formar unica a cada viaje de prueba para el flujo',
	Origin VARCHAR(3) COMMENT 'Campo que contiene el codigo de la ciudad de origen del viaje de prueba',
	Cdg_Destination VARCHAR(3) COMMENT 'Campo que contiene el codigo de la ciudad de destino del viaje de prueba',
	Name_Destination VARCHAR(200) COMMENT 'Campo que contiene el nombre de la ciudad de destino del viaje de prueba',
	Airline VARCHAR(2) COMMENT 'Campo que contiene la aerolinea del viaje de prueba',
	Cabin_Type VARCHAR(2) COMMENT 'Campo que contiene el tipo de cabina del viaje de prueba',
	Booking_Class VARCHAR(50) COMMENT 'Campo que contiene la clase del viaje de prueba',
	Id_Periodo_Viaje INTEGER COMMENT 'Campo que contiene el id del periodo de viaje usado en la prueba del flujo',
	Fare_Basis VARCHAR(50) COMMENT 'Campo que contiene el fare basis del viaje de prueba',
	Over_Percentage VARCHAR(4) COMMENT 'Campo que contiene el porcentaje promoción del viaje de prueba',
	Percentage_To_Apply VARCHAR(5) COMMENT 'Campo que contiene el porcentaje aplicado en el viaje de prueba',
	Commission DOUBLE COMMENT 'Campo que contiene la comisión del viaje de prueba',
	Kp_Over BIT COMMENT 'Campo que contiene KP Over del viaje de prueba',
	Num_ADT SMALLINT COMMENT 'Campo que contiene el numero de pasajeros del tipo adulto',
	Num_CHD SMALLINT COMMENT 'Campo que contiene el numero de pasajeros del tipo Niños',
	Num_INF SMALLINT COMMENT 'Campo que contiene el numero de pasajeros del tipo Infantes',
	PRIMARY KEY (Id),
	KEY (Id_Periodo_Viaje)
)  COMMENT='Tabla que contiene la información de cada uno de los viajes de pruebas por cada regla comercial.'
;



SET FOREIGN_KEY_CHECKS=1;


--  Create Foreign Key Constraints 
ALTER TABLE Login_Viaje ADD CONSTRAINT FK_Login_Viaje_Login_Posible 
	FOREIGN KEY (Id_Login_Posible) REFERENCES Login_Posible (Id)
;

ALTER TABLE Login_Viaje ADD CONSTRAINT FK_Login_Viaje_Viaje_Prueba 
	FOREIGN KEY (Id_Viaje_Prueba) REFERENCES Viaje_Prueba_Flujo (Id)
;

ALTER TABLE Pasajero_Viaje ADD CONSTRAINT FK_Pasajero_Viaje_Viaje_Prueba 
	FOREIGN KEY (Id_Viaje_Prueba) REFERENCES Viaje_Prueba_Flujo (Id)
;

ALTER TABLE Pasajero_Viaje ADD CONSTRAINT FK_Pasajero_Viaje_Pasajero_Posible 
	FOREIGN KEY (Id_Pasajero_Posible) REFERENCES Pasajero_Posible (Id)
;

ALTER TABLE Resultado_CP ADD CONSTRAINT FK_Resultado_CP_Caso_Prueba 
	FOREIGN KEY (Id_Caso_Prueba) REFERENCES Caso_Prueba (Id)
;

ALTER TABLE Resultado_CP ADD CONSTRAINT FK_Resultado_CP_Viaje_Prueba_Flujo 
	FOREIGN KEY (Id_Viaje_Prueba_Flujo) REFERENCES Viaje_Prueba_Flujo (Id)
;

ALTER TABLE Tarjeta_Viaje ADD CONSTRAINT FK_Tarjeta_Viaje_Tarjeta_Posible 
	FOREIGN KEY (Id_Tarjeta_Posible) REFERENCES Tarjeta_Posible (Id)
;

ALTER TABLE Tarjeta_Viaje ADD CONSTRAINT FK_Tarjeta_Viaje_Viaje_Prueba 
	FOREIGN KEY (Id_Viaje_Prueba) REFERENCES Viaje_Prueba_Flujo (Id)
;

ALTER TABLE Viaje_Prueba_Flujo ADD CONSTRAINT FK_Viaje_Prueba_Flujo_Periodo_Viaje_Posible 
	FOREIGN KEY (Id_Periodo_Viaje) REFERENCES Periodo_Viaje_Posible (Id)
;
